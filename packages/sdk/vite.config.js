// @ts-check
/**
 * Vite just generate the bundle, Type declarations are generated by *tsc*,
 * see "build" script in package.json
 */
import { defineConfig } from "vite";
import tsconfigPaths from "vite-tsconfig-paths";
import { visualizer } from "rollup-plugin-visualizer";
import dts from "vite-plugin-dts";
import { resolve, join } from "path";

export default defineConfig(({ command }) => {
  return {
    clearScreen: false,
    plugins: [
      tsconfigPaths(),
      dts({
        // rollupTypes: true,
        compilerOptions: {
          declarationMap: true,
        },
        exclude: ["src/builder/**/*"],
      }),
      process.env.STATS ? visualizer({ filename: "stats.html", emitFile: true }) : [],
    ],
    resolve: {
      preserveSymlinks: true,
    },
    // root: join(__dirname, "src"),

    build: {
      outDir: join(__dirname, "dist/sdk"),
      emptyOutDir: true,
      lib: {
        entry: {
          attributes: resolve(__dirname, "src/attributes.ts"),
          // "web-components": resolve(__dirname, "src/web-components/index.ts"),
          datasources: resolve(__dirname, "src/datasources.ts"),
          "dynamic-css": resolve(__dirname, "src/dynamic-css.ts"),
          sdk: resolve(__dirname, "src/sdk.ts"),
          zod: resolve(__dirname, "src/zod.ts"),
          settings: resolve(__dirname, "src/settings.ts"),
        },
        formats: ["es"],
      },
      rollupOptions: {
        // make sure to externalize deps that shouldn't be bundled
        // into your library
        external: ["zod", "tailwindcss", "vite", "vite-tsconfig-paths", "@enpage/style-system"],
        output: {
          // Provide global variables to use in the UMD build
          globals: {
            zod: "zod",
            tailwindcss: "tailwindcss",
          },
        },
      },
    },
  };
});
