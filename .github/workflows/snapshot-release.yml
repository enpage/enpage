name: Snapshot Release

on:
  pull_request:
    types: [closed]
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  snapshot-release:
     # Run only if the PR was merged and the commit message doesn't start with "chore(release):"
    if: github.event.pull_request.merged == true && !startsWith(github.event.pull_request.title, 'chore(release):')
    name: Snapshot Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'pnpm'

      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: ðŸ§© Install Dependencies
        id: install-dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Create Snapshot Release
        run: pnpm changeset version --snapshot ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Snapshot
        run: pnpm changeset publish --tag ${{ github.sha }} >> $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Parse output
        id: parse_published_packages
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync(process.env.GITHUB_STEP_SUMMARY, 'utf8');
            const packages = Array.from(
              output.matchAll(/Publishing "([^"]+)" at "([^"]+)"/gm), m => ({ package: m[1], version: m[2] })
            )

            console.log('Published:', JSON.stringify(packages, null, 2));

            let body = "";
            (packages || []).forEach(({ package, version }) => {
              body += `- ${package}@${version}\n`;
            });

            return packages.length > 0 ? { packages, message } : null;


      - name: Post comment on merged PR
        if: steps.parse_published_packages.outputs.result != 'null'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { packages, message } = ${{ steps.parse_published_packages.outputs.result }};
            const body = '## Snapshots versions released :rocket:\n\n' + message;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: steps.parse_published_packages.outputs.result != 'null'
        env:
          SLACK_WEBHOOK: ${{ secrets.RELEASES_SLACK_WEBHOOK }}
          SLACK_CHANNEL: "releases"
          SLACK_USERNAME: "SDKReleaser"
          SLACK_COLOR: 'success'
          SLACK_TITLE: "New Upstart snapshots available"
          SLACK_FOOTER: ""
          SLACK_ICON_EMOJI: ':rocket:'
          SLACK_MESSAGE_ON_SUCCESS: |
            Some snapshot packages from have been released! :tada:

            ${{ steps.parse_published_packages.outputs.result.message }}

